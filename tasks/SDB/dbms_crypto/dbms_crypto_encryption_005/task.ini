[Info]

; Вариант задачи - номер по журналу того человека, чей отчет (и, соответственно, предметная область используется)
Variant=0

; Текст задачи
Text="Напишите функцию my_decrypt, которая возвращает число типа NUMBER из полученных сырых данных. 
Ключ передается вторым параметром типа VARCHAR2
Зам: Использовать DBMS_CRYPTO.ENCRYPT_AES128, DBMS_CRYPTO.CHAIN_CBC, DBMS_CRYPTO.PAD_PKCS5, пакет UTL_RAW
"

; Сложность (1-5)
Difficulty=3

; Тема задачи
Topic="DBMS_CRYPTO"
TopicId=47

; Автор задачи
Author="Mus"

; Имя решателя (не изменять)
Solver="DBMS_CRYPTO"

[Solution]

RequiredWords[]="DBMS_CRYPTO"
RequiredWords[]="UTL_RAW"
RequiredWords[]="ENCRYPT_AES128"
RequiredWords[]="CHAIN_CBC"
RequiredWords[]="PAD_PKCS5"

ExemplaryFunction="
CREATE OR REPLACE FUNCTION my_encrypt_exemplary (numb NUMBER, in_key VARCHAR2)
  RETURN RAW
IS 
	encrt      RAW (2000);
	   encryption_type    PLS_INTEGER :=          
                            DBMS_CRYPTO.ENCRYPT_AES128 
                          + DBMS_CRYPTO.CHAIN_CBC
                          + DBMS_CRYPTO.PAD_PKCS5;	   
BEGIN
	  encrt := DBMS_CRYPTO.ENCRYPT
      (
         src => UTL_RAW.CAST_FROM_NUMBER(numb),
         typ => encryption_type,
         key => UTL_RAW.CAST_TO_RAW (in_key)
      );
	  
	   return(encrt);
END;
"

;CREATE OR REPLACE FUNCTION my_decrypt (incrt RAW, in_key VARCHAR2)
;  RETURN NUMBER
;IS 
;	decrt      RAW (2000);
;	decryption_type    PLS_INTEGER :=          
;                            DBMS_CRYPTO.ENCRYPT_AES128 
;                          + DBMS_CRYPTO.CHAIN_CBC
;                          + DBMS_CRYPTO.PAD_PKCS5;	   
;BEGIN
;	decrt := DBMS_CRYPTO.DECRYPT
;	(
;	 src => incrt,
;	 typ => decryption_type,
;	 key => UTL_RAW.CAST_TO_RAW (in_key)
;	);
;
;	return(UTL_RAW.CAST_TO_NUMBER(decrt));
;END;

ExemplaryFunctionCall="SELECT plain_data, encryption_key, my_encrypt_exemplary(plain_data, encryption_key) AS encrypted_data, plain_data AS decrypted_data FROM data_to_decrypt"
UserFunctionCall="SELECT plain_data, encryption_key, my_encrypt_exemplary(plain_data, encryption_key) AS encrypted_data, my_decrypt(my_encrypt_exemplary(plain_data, encryption_key), encryption_key) AS decrypted_data FROM data_to_decrypt"



[DataBase]
TaskId=852
GroupTaskId=852
