[Info]

; Вариант задачи - номер по журналу того человека, чей отчет (и, соответственно, предметная область используется)
Variant=0

; Текст задачи
Text="Имеется таблица tariffs, хранящая информацию о тарифах. Требуется зафиксировать события, при которых ежемесячная оплата тарифа становится больше 1300 рублей. Таблица, в которую буду записываться события имеет следующие столбцы (строгий порядок столбцов): old_payment INTEGER, new_payment INTEGER, tariff_user VARCHAR2(20), audit_time DATE, product_name VARCHAR2(20)"

; Сложность (1-5)
Difficulty=1

; Тема задачи
Topic="Аудит"
TopicId=43

; Автор задачи
Author="Look"

; Имя решателя (не изменять)
Solver="Trigger"

[Solution]

; Процедура проверки:
; Выполняется запрос пользователя
; Выполняются запросы из PreNotEmptyResultQuery. Выполняются запросы из NotEmptyResultQuer, ожидается, что результат каждого не пуст

; Массив запрещенных слов (специфичные для данной задачи)
; ForbiddenWords[]=word1
; ForbiddenWords[]=word2

; Массив обязательных слов (специфичные для данной задачи)
RequiredWords[]="TRIGGER"
RequiredWords[]="AFTER"
RequiredWords[]="UPDATE"

; Запросы, который предшетствует запросам, результаты которых должны быть непустыми
; две опреации, так по заданию надо проверить обновление и вставку

PreNotEmptyResultQuery[]="update tariffs set month_payment=1500 where tariff_id = 1"

NotEmptyResultQuery[]="SELECT * FROM payment_audit WHERE old_payment = 300 AND new_payment = 1500 AND UPPER(tariff_user) = UPPER(user)"

PreEmptyResultQuery[]="UPDATE tariffs SET month_payment = 1000 WHERE tariff_id = 2"

EmptyResultQuery[]="SELECT * FROM payment_audit WHERE new_payment = 1000"

;решение
  
;CREATE TRIGGER audit_month_payment
;AFTER UPDATE ON tariffs
;for each row
;begin
;if (:new.month_payment > 1300)
;     			 then
;      			insert into payment_audit values (
;     		 	:old.month_payment,
;     			 :new.month_payment,
;     	 		user,
;     			 sysdate,
;      			:old.tariff_name);
;end if;
;end;



[DataBase]
TaskId=697
GroupTaskId=697
