[Info]

Variant=0

Text="<p>Дан массив с бронированиями люкс-номера в отеле и желаемая дата его бронирования. Необходимо написать функцию booking_hotel($__booking_date, $__desire_date),
которая проверяет: может ли на желаемую дату быть забронирован номер. В случае удачи вернуть строку 'Номер свободен', в случае неудачи вернуть
'К сожалению, на данную дату, номер забронирован'. Массив бронирований имеет вид: ['12.09.2017', '14.09.2017-02.10.2017'], если бронирование на один день то одна дата, если на несколько то записывается через дифис.
Желаемая дата записывается в том же виде.</p>"

Difficulty=3

Topic="Задачи на дату и время"
TopicId=256

Author="zexel"

Solver="PHP"

[Solution]
ExemplaryQuery='function parse_dates($__date)
		{
			$date_tmstmp = array();
			
			if((strrpos($__date, "-")) !== false) {
				$date_tmstmp[0] = mktime(0, 0, 0, mb_strcut($__date, 3, 2), mb_strcut($__date, 0, 2), mb_strcut($__date, 6, 4)); 
				$date_tmstmp[1]	= mktime(0, 0, 0, mb_strcut($__date, 14, 2), mb_strcut($__date, 11, 2), mb_strcut($__date, 17, 4));
			}
				
			else {
				$date_tmstmp[0] = mktime(0, 0, 0, mb_strcut($__date, 3, 2), mb_strcut($__date, 0, 2), mb_strcut($__date, 6, 4));
				$date_tmstmp[1]	= mktime(0, 0, 0, mb_strcut($__date, 3, 2), mb_strcut($__date, 0, 2), mb_strcut($__date, 6, 4));
			}
			
			return $date_tmstmp;
		}
		
	function booking_hotel($__booking_date, $__desire_date)
	{
		foreach($__booking_date as $date)
			$booking_tmstmp[parse_dates($date)[0]] = parse_dates($date)[1];
			
		$desire_tmstmp_beg = parse_dates($__desire_date)[0];
		$desire_tmstmp_end = parse_dates($__desire_date)[1];
			
		foreach($booking_tmstmp as $key => $booking) 
			if($key <= $desire_tmstmp_beg  && $desire_tmstmp_beg <= $booking || $key <= $desire_tmstmp_end && $desire_tmstmp_end <= $booking)
				return "К сожалению, на данную дату, номер забронирован";
			
		return "Номер свободен";
	}'



[DataBase]
TaskId=2358
GroupTaskId=1508
