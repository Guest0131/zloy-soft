[Info]

Variant=0

Text="<p>Написать функцию function hamming_code($__code), кодирующая машинное слово(16бит) кодом Хэмминга с общим контролем четности. Вернуть сериализованную последовательность.</p>"

Difficulty=4

Topic="Задачи на массивы"
TopicId=253

Author="zexel"

Solver="PHP"

[Solution]
ExemplaryQuery='function get_count_control_bits($__number) {
	$count_control_bits = 5;
	
	//в задаче указано что имеем 16 бит, поэтому всего добавим 5 контрольных битов
	for ($index = 0; $index < 5; ++$index) {
		$count_control_bits = pow(2, $index - 1) <= $__number && $__number < pow(2, $index) 
			? $index - 1 : $__number == pow(2, $index) ? $index : $count_control_bits;
		
		$__number == pow(2, $index) && $index + 1 == 5 ? $count_control_bits = $index + 1 : "";
	}
	
	return $count_control_bits;
}

function calc_control_sum($__code) {
	$sum_controls = [0, 0, 0, 0, 0];
	$shift = 0;
	$number = 0;
	
	for ($index = 0; $index < 5; ++$index) {
		$number = pow(2, $index) - 1;
		
		while ($number < count($__code)) {
			while ($shift < pow(2, $index)) {
				if (isset($__code[$shift + $number])) {
					$sum_controls[$index] += $__code[$shift + $number];
					++$shift;
				}
				
				else
					break;
			}
			
			$number += 2 * $shift;
			$shift = 0;
		}
		
		$sum_controls[$index] %= 2;
	}
	
	return $sum_controls;
}

function hamming_code($__code) {
	$sum_controls = [0, 0, 0, 0, 0];
	$code = [];
	$index = 0;
	$parity_bit = 0;
	
	for ($number = 0; $number < count($__code) + count($sum_controls); ++$number) {
		if ($number == pow(2, $index) - 1) {
			$code[$number] = $sum_controls[$index];
			++$index;
		}
		else {
			$code[$number] = $__code[$number - get_count_control_bits($number)];
		}
	}
	
	$sum_controls = calc_control_sum($code);
	for($i = 0; $i < 5; ++$i) {
		foreach ($code as $number => $bit) {
			$parity_bit += $bit;
			if ($number == pow(2, $i) - 1)
				$code[$number] = $sum_controls[$i];
		}
	}
	
	return serialize(array_merge($code, [$parity_bit % 2]));
}'

