[Info]

Variant=0

Text="<p>Написать функцию function opposite_sum($__a, $__b, $__c, $__d, $__module, $__degree). Необходимо выполнить пункты:</p> 
<ol>
<li>Проверить, что Z/$__module - поле если не так, то вернуть 'Не поле.';</li> 
<li>Найти сумму всех различных корней многочлена вида $__a*x^$__degree + $__b*x^($__degree - 1) + $__c*x + $__d над полем Z/$__module $__degree >=3. Если многочлен неприводим над Z/$__module то выводить 'Многочлен неприводим.';</li>
<li>В ответе вывести элемент обратный к $sum. Если $sum == 0, то вернуть строку 'Сумма равна 0.'.</li>
</ol>"

Difficulty=3

Topic="Задачи на основы языка"
TopicId=90

Author="zexel"

Solver="PHP"

[Solution]
ExemplaryQuery='function is_field($__module)
	{
		for($i = 2; $i < $__module; ++$i)
			if($__module % $i == 0)
				return false;
			
		return true;
	}
		
	//проверка на приводимость
	function is_reducible($__a, $__b, $__c, $__d, $__module, $__degree)
	{
		for($i = 0; $i < $__module; ++$i)
			if(($__a * pow($i, $__degree) + $__b * pow($i, $__degree - 1) + $__c * $i + $__d) % $__module == 0)
				return true;
			
		return false;
	}
	
	//сумма корней
	function sum_roots($__a, $__b, $__c, $__d, $__module, $__degree)
	{
		$result = 0;
		
		for($i = 0; $i < $__module; ++$i){
			if(($__a * pow($i, $__degree) + $__b * pow($i, $__degree - 1) + $__c * $i + $__d) % $__module == 0)
				$result += $i;
		}
			
		return $result % $__module;
	}
	
	//обратный к сумме
	function opposite_sum($__a, $__b, $__c, $__d, $__module, $__degree)
	{
		$result = 0;
		if(!is_field($__module))
			return "Не поле.";
			
		if(!is_reducible($__a, $__b, $__c, $__d, $__module, $__degree))
			return "Многочлен неприводим.";
			
		$sum = sum_roots($__a, $__b, $__c, $__d, $__module, $__degree);
			
		if($sum == 0)
			 return "Сумма равна 0.";

for($i = 1; $i < $__module; ++$i){
			if(($sum * $i) % $__module == 1)
				return $i;
		}
	}'



[DataBase]
TaskId=2383
GroupTaskId=1531
