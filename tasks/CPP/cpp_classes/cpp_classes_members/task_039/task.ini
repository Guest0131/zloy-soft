[Info]

;Вариант. 0 - если у задачи нет вариантов. Числа 1, 2, ... если есть.
Variant=0

;Условие
Text="Какие операторы потребуются для освобождения памяти в следующем участке кода?</p><p><pre class=\"prettyprint linenums no-scroll\"><code>
class Employee
{
public:
Employee(int id, const std::string & name)
: Id(id), Name(name)
{
employeeCounter++;
}

int Id;
std::string Name;

static int employeeCounter;
};

int Employee::employeeCounter = 0;

int main()
{
const int arraySize = 5;
Employee **employees = new Employee*[arraySize];

for(int index = 0; index &lt; arraySize; index++)
{
employees[index] = new Employee(index, \"Vasay\");
}

return 0;
} 
</code></pre></p><p>"

;Сложность в диапазоне [1-5]
Difficulty=1

;Тема
Topic="Члены класса"

;ID Темы
TopicId=565

;Автор
Author="Федосов Д.В."

;Имя решателя (не изменять)
Solver="Test"

[Solution]
Type = "multi"

Multi[] = "delete []"
ResponseOptions[]="delete []"
Multi[] = "delete "
ResponseOptions[]="delete "
ResponseOptions[]="operator delete [] "
ResponseOptions[]="delete operator [] "
ResponseOptions[]="delete operator "
ResponseOptions[]="free"
ResponseOptions[]="operator free()"



[DataBase]
TaskId=1802
GroupTaskId=1280
