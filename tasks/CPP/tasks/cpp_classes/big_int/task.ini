[Info]

Variant=0

Text="Нередко нужно проводить арифметические операции с большими числами, которые не покрывают встроенные типы.
Реализуйте класс <b>BigInt</b>, который позволяет оперировать большими числами. Для простоты реализации предлагается хранить в массиве
десятичные цифры числа.
Класс должен содержать следующие члены:
<ul>
	<li>Конструктор по умолчанию. Число равно 0;</li>
	<li>Конструктор с параметром типа int - начальное значение;</li>
	<li>Конструктор с параметром типа std::string - начальное значение в виде строки;</li>
	<li>Явный оператор присваивания;</li>
	<li>Дружественный оператор сложения;</li>
	<li>Дружественный оператор вычитания;</li>
	<li>Функцию ToString() - возвращает число в виде строки. Если число отрицательно, то в начале знак минус.</li>
	<li>Член char _digits[100] - хранит десятичные цифры числа (можно не придерживаться этой рекомендации, а использовать это поле по-другому);</li>
	<li>Член bool _isNegative - хранит информацию, является ли число отрицательным</li>
</ul>"

Difficulty=4

Topic="Задачи на классы"
TopicId=607
Author="Автор"
Solver="CPP"



[DataBase]
TaskId=1349
GroupTaskId=1107
